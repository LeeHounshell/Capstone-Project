<?xml version="1.0" encoding="utf-8"?>
<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.harlie.radiotheater.radiomysterytheater">

    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Include required permissions to determine if network is available -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Include required permissions for local SQLite database -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!-- note, this can be refactored to the free androidmanifest.xml -->
    <!-- admob get device id -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />

    <!--
         Because of the custom authentication flow implemented for Email and Google,
         there are some permissions i don't need now that are normally required:
             "android.permission.GET_ACCOUNTS"
             "android.permission.USE_CREDENTIALS"
             "android.permission.READ_PROFILE"
             "android.permission.READ_CONTACTS"

         Also, once the TV version is ready..
         set android.software.leanback and android.hardware.touchscreen to false,
         so the APK will be available to both TV and regular devices.

    <uses-feature
        android:name="android.software.leanback"
        android:required="false" />

    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />
    -->

    <application
        android:name=".RadioTheaterApplication"
        android:allowBackup="false"
        android:fullBackupContent="@xml/mybackupscheme"
        android:banner="@drawable/banner_tv"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <provider
            android:name=".data.RadioTheaterProvider"
            android:authorities="@string/radio_theater_content_authority"
            android:exported="true">
        </provider>

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version">
        </meta-data>

        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc">
        </meta-data>

        <meta-data
            android:name="io.fabric.ApiKey"
            android:value="${FABRIC_API_KEY}" />

        <!--
             (OPTIONAL) use this meta data to indicate which icon should be
             used in Android Auto media notifications (for example, when the
             music changes and the user is looking at another app)
        -->
        <meta-data
            android:name="com.google.android.gms.car.notification.SmallIcon"
            android:resource="@drawable/ic_notification"
            tools:ignore="ManifestResource">
        </meta-data>

        <!--
             (OPTIONAL) use this meta data to override the theme from which Android Auto will
             look for colors. If you don't set this, Android Auto will look
             for color attributes in your application theme.
        -->
        <meta-data
            android:name="com.google.android.gms.car.application.theme"
            android:resource="@style/CarTheme">
        </meta-data>

        <!--
             (OPTIONAL) use this meta data to override the theme from which Android Wear will
             look for colors. Currently, only background color of the media cards can be set, via
             colorPrimaryDark. If you don't set this custom theme, Android Wear will look
             for colorPrimaryDark attribute in your application theme.
        -->
        <meta-data
            android:name="com.google.android.wearable.media.theme"
            android:resource="@style/WearTheme">
        </meta-data>

        <!--
         Main audio playback service, provides media browsing and media playback services to
         consumers through MediaBrowserService and MediaSession. Consumers connect to it through
         MediaBrowser (for browsing) and MediaController (for playback control)
        -->
        <service
            android:name=".RadioTheaterService"
            android:exported="true"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />
            </intent-filter>
        </service>

        <service
            android:name="com.google.android.libraries.cast.companionlibrary.cast.reconnection.ReconnectionService">
        </service>

        <service
            android:name=".RadioTheaterWidgetService"
            android:enabled="true"
            android:exported="false">
        </service>

        <service
            android:name=".RadioControlIntentService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.START" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.PLAY" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.SEEK" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.BACKUP" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.STOP" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.PAUSE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.NEXT" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.harlie.radiotheater.radiomysterytheater.action.PREV" />
            </intent-filter>
        </service>

        <!-- Android Wear communication -->
        <service android:name=".WearTalkService"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <!-- listeners receive events that match the action and data filters -->
                <action android:name="com.google.android.gms.wearable.DATA_CHANGED" />
                <action android:name="com.google.android.gms.wearable.MESSAGE_RECEIVED" />
                <data android:scheme="wear" android:host="*" android:pathPrefix="/radiomysterytheater" />
            </intent-filter>
        </service>

        <!--
         A receiver that will receive media buttons and send as intents to the MediaBrowserServiceCompat implementation.
         Required on pre-Lollipop. More information at
         http://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html
         https://www.youtube.com/watch?v=FBC1FgWe5X4&utm_campaign=adp_series_mediabrowserservicecompat_030116&utm_source=medium&utm_medium=blog
        -->
        <receiver
            android:name=".utils.RadioTheaterReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <receiver
            android:icon="@drawable/logo_icon"
            android:label="@string/app_widget_name"
            android:name=".utils.RadioTheaterWidgetProvider" >
            <intent-filter >
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/radio_theater_widget_info">
            </meta-data>
        </receiver>

        <activity
            android:name=".SplashActivity"
            android:screenOrientation="unspecified"
            android:configChanges="keyboardHidden|orientation"
            android:theme="@style/AppTheme.Splash">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <!-- Because the SQLite database must also be installed
                 deep links go first to the SplashScreen to be parsed and routed
                 after first ensuring the database is properly setup.
            -->
            <intent-filter
                android:label="@string/filter_title_viewradiotheater">
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <!-- Accepts URIs that begin with "http://harlie.com/radiomysterytheater”
                     e.g. http://harlie.com/radiomysterytheater?episode=1
                 -->
                <data android:scheme="http"
                    android:host="harlie.com"
                    android:pathPrefix="/radiomysterytheater">
                </data>
                <!-- note that the leading "/" is required for pathPrefix-->
                <!-- Accepts URIs that begin with "harlie://radiomysterytheater”
                     e.g. harlie://radiomysterytheater?episode=1
                 -->
                <data android:scheme="harlie"
                    android:host="radiomysterytheater">
                </data>
            </intent-filter>
        </activity>

        <activity
            android:name=".AuthenticationActivity"
            android:launchMode="singleTop"
            android:configChanges="keyboardHidden|orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait">
        </activity>

        <activity
            android:name=".AuthEmailActivity"
            android:launchMode="singleTop"
            android:configChanges="keyboardHidden|orientation"
            android:screenOrientation="portrait">
        </activity>

        <activity
            android:name=".AuthGoogleActivity"
            android:launchMode="singleTop"
            android:configChanges="keyboardHidden|orientation"
            android:screenOrientation="portrait">
        </activity>

        <activity
            android:name=".AuthTwitterActivity"
            android:launchMode="singleTop"
            android:configChanges="keyboardHidden|orientation"
            android:screenOrientation="portrait">
        </activity>

        <activity
            android:name=".AuthFacebookActivity"
            android:launchMode="singleTop"
            android:configChanges="keyboardHidden|orientation"
            android:screenOrientation="portrait">
        </activity>

        <activity
            android:name=".AutoplayActivity"
            android:launchMode="singleTop"
            android:label="@string/title_activity_autoplay" >

            <!-- Use this intent filter to get voice searches, like "Episodes about Time Travel" -->
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <activity
            android:name=".EpisodeListActivity"
            android:launchMode="singleTop"
            android:label="@string/app_name">
        </activity>

        <activity
            android:name=".EpisodeDetailActivity"
            android:launchMode="singleTop"
            android:label="@string/title_episode_detail"
            android:parentActivityName=".EpisodeListActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.harlie.radiotheater.radiomysterytheater.EpisodeListActivity">
            </meta-data>
        </activity>

        <activity
            android:name=".SettingsActivity"
            android:label="@string/title_activity_settings"
            android:parentActivityName=".AutoplayActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.harlie.radiotheater.radiomysterytheater.AutoplayActivity">
            </meta-data>
        </activity>

        <activity
            android:name=".AboutActivity"
            android:label="@string/title_activity_about"
            android:parentActivityName=".AutoplayActivity"
            android:theme="@style/AppTheme">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.harlie.radiotheater.radiomysterytheater.AutoplayActivity">
            </meta-data>
        </activity>

    </application>

</manifest>
